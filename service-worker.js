"use strict";var precacheConfig=[["/index.html","f2d650c9f178812f8870322368050f13"],["/static/css/main.56588438.css","d2211e0bf916b711fb68252e27f27a7d"],["/static/js/main.2971aec5.js","bd29a6c58f726bf21bbed06055e0889d"],["/static/media/flow.2ccc6726.png","2ccc672649f7282db52166b126ca1d86"],["/static/media/fortune-cookie.e800ec43.jpg","e800ec43bef810a682b866e8ad31ac38"],["/static/media/home.8a2a5402.png","8a2a5402c196c1af946ffa3a5149617d"],["/static/media/intuit-team.4aa69c93.jpg","4aa69c9357224f9624104e221aec370b"],["/static/media/kirsten.c9a01eec.jpg","c9a01eecf8d9aa1c7cb5f36cdf2808a4"],["/static/media/minimize-sm.3945a4b8.mp4","3945a4b8c7585db5c75ac1a367f10785"],["/static/media/pnc-screenshot.c5c2461d.png","c5c2461de2a62c276da9427692260694"],["/static/media/popout-md.82ec358a.mp4","82ec358ae435e67115de2351c6d68160"],["/static/media/problem-sm.501a9ac5.mp4","501a9ac5d08b2a4c235ff0b51545b7b5"],["/static/media/qbo-sm.51db0d37.mp4","51db0d37fde73fc1dc507f443437e45b"],["/static/media/rob-1.8ddcbef5.jpg","8ddcbef52160c6bd706aa74e15fba0c7"],["/static/media/slack-1.f0edce2a.jpg","f0edce2a85041ef24bafba920c1c91d4"],["/static/media/slack-2.a190a859.jpg","a190a8593e5e5623003d05d30bf3e9fd"],["/static/media/slack-3.638793f5.jpg","638793f54ad3c6d94ccc247f8da4b2c8"],["/static/media/solution-lg.872e5169.mp4","872e516918c195a67349683c4fcf9aa4"],["/static/media/trowser.9d1cbc0a.mp4","9d1cbc0a5d9ac30a56bfed18a2151502"],["/static/media/vid-5.8caf9c6f.mp4","8caf9c6f27ca2add18dc5f237a76e268"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(t){return t.redirected?("body"in t?Promise.resolve(t.body):t.blob()).then(function(e){return new Response(e,{headers:t.headers,status:t.status,statusText:t.statusText})}):Promise.resolve(t)},createCacheKey=function(e,t,a,c){var n=new URL(e);return c&&n.pathname.match(c)||(n.search+=(n.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),n.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(t){return a.every(function(e){return!e.test(t[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],c=new URL(t,self.location),n=createCacheKey(c,hashParamName,a,/\.\w{8}\./);return[c.toString(),n]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(c){return setOfCachedUrls(c).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var e=new Request(t,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+t+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return c.put(t,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(t){return t.keys().then(function(e){return Promise.all(e.map(function(e){if(!a.has(e.url))return t.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(t){if("GET"===t.request.method){var e,a=stripIgnoredUrlParameters(t.request.url,ignoreUrlParametersMatching),c="index.html";(e=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,c),e=urlsToCacheKeys.has(a));var n="/index.html";!e&&"navigate"===t.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],t.request.url)&&(a=new URL(n,self.location).toString(),e=urlsToCacheKeys.has(a)),e&&t.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',t.request.url,e),fetch(t.request)}))}});